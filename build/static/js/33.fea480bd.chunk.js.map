{"version":3,"file":"static/js/33.fea480bd.chunk.js","mappings":"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","sources":["components/UI/FormControl/FormControl.style.js","components/UI/FormControl/FormControl.js","components/UI/HtmlLabel/HtmlLabel.js","containers/Agent/AccountSettings/AccountSettings.style.js","containers/Agent/AccountSettings/AgentCreateOrUpdateForm.js"],"sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n\n  .ant-btn-primary {\n    &:hover {\n      background: ${themeGet('primary.0', '#008489')};\n      opacity: 0.9;\n    }\n  }\n\n  .field-label {\n    display: block;\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 15px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n  .ant-input,\n  .ant-picker,\n  .ant-input-number,\n  .ant-input-password {\n    width: 100%;\n    min-height: 48px;\n    border-radius: 3px;\n    border-color: ${themeGet('border.3', '#E6E6E6')};\n    &:focus,\n    &.ant-input-focused,\n    &.ant-picker-focused,\n    &.ant-input-number-focused,\n    &.ant-input-password-focused {\n      box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n    }\n  }\n\n  .ant-checkbox-wrapper {\n    .ant-checkbox {\n      + span {\n        font-size: 15px;\n        font-weight: 700;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        line-height: 1;\n      }\n      .ant-checkbox-inner {\n        border-radius: 0;\n        border-color: ${themeGet('text.1', '#909090')};\n      }\n      &.ant-checkbox-checked {\n        .ant-checkbox-inner {\n          border-color: ${themeGet('primary.0', '#008489')};\n          background-color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n\n  .ant-input-number {\n    max-width: 100px;\n    .ant-input-number-input {\n      min-height: 48px;\n    }\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n  .ant-input-number-handler:hover {\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      color: ${themeGet('primary.0', '#008489')};\n    }\n  }\n\n  .ant-picker {\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n\n  .ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) {\n      width: 100%;\n      .ant-select-selector {\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n        min-height: 48px;\n        .ant-select-selection-search-input {\n          min-height: 48px;\n        }\n        .ant-select-selection-item {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n    &.ant-select-focused {\n      &.ant-select-single:not(.ant-select-customize-input) {\n        .ant-select-selector {\n          box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n        }\n      }\n    }\n  }\n\n  &.has-error {\n    .ant-input,\n    .ant-input-password {\n      border-color: ${themeGet('error.0', '#F9503D')};\n    }\n    .feedback {\n      color: ${themeGet('error.0', '#F9503D')};\n    }\n    .ant-input-password {\n      .ant-input {\n        border-color: transparent;\n      }\n    }\n  }\n\n  .ant-input-password {\n    .ant-input {\n      min-height: auto;\n      border-radius: initial;\n      border-color: transparent;\n      &:focus {\n        box-shadow: none;\n      }\n    }\n  }\n\n  .ant-radio-group-solid {\n    .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      &::before {\n        content: none;\n      }\n      &:hover {\n        color: #fff;\n        &::before {\n          content: none;\n        }\n      }\n    }\n    .ant-radio-button-wrapper {\n      &:hover {\n        color: ${themeGet('primary.0', '#008489')};\n      }\n    }\n  }\n\n  button[type='submit'] {\n    border-radius: 3px;\n    height: 47px;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    font-size: 15px;\n    font-weight: 700;\n    text-transform: capitalize;\n    padding-left: 28px;\n    padding-right: 28px;\n    line-height: 1;\n\n    &::after {\n      content: none;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HtmlLabel from '../HtmlLabel/HtmlLabel';\nimport Wrapper from './FormControl.style';\n\nconst FormControl = ({\n  className,\n  label,\n  labelTag,\n  htmlFor,\n  children,\n  error,\n}) => {\n  const addAllClasses = ['form-control'];\n  if (error) {\n    addAllClasses.push('has-error');\n  }\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <Wrapper className={addAllClasses.join(' ')}>\n      {label && (\n        <HtmlLabel\n          className=\"field-label\"\n          as={labelTag}\n          htmlFor={htmlFor}\n          content={label}\n        />\n      )}\n      {children}\n      {error && <div className=\"feedback\">{error}</div>}\n    </Wrapper>\n  );\n};\n\nFormControl.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  labelTag: PropTypes.string,\n  htmlFor: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.any,\n};\n\nexport default FormControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LabelWrapper = styled('label')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst HtmlLabel = ({ htmlFor, content, ...props }) => {\n  return (\n    <LabelWrapper htmlFor={htmlFor} {...props}>\n      {content}\n    </LabelWrapper>\n  );\n};\n\nHtmlLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default HtmlLabel;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst AccountSettingWrapper = styled.div`\n  padding: 60px 0;\n  @media (max-width: 767px) {\n    padding: 30px 0;\n  }\n`;\n\nexport const AccountSidebar = styled.aside`\n  border-radius: 6px;\n  background-color: ${themeGet('color.1', '#ffffff')};\n  box-shadow: 0 3px 6px ${themeGet('boxShadow.1', 'rgba(26, 68, 116, 0.16)')};\n  overflow: hidden;\n  @media (max-width: 575px) {\n    box-shadow: none;\n    margin-bottom: 0;\n  }\n\n  .ant-menu {\n    padding: 27px 0 20px;\n    border: 0;\n    border-inline-end: 0 !important;\n    @media (max-width: 575px) {\n      display: flex;\n      flex-wrap: nowrap;\n      overflow-y: auto;\n      padding: 20px 0 30px;\n    }\n    li {\n      margin: 22px 0;\n      height: 26px;\n      line-height: 26px;\n      padding: 0 30px !important;\n      border-radius: 0;\n\n      &:hover {\n        background-color: transparent !important;\n      }\n\n      @media (min-width: 1441px) {\n        padding: 0 60px !important;\n      }\n      @media (max-width: 575px) {\n        width: auto;\n        height: inherit;\n        line-height: initial;\n        padding: 0 15px !important;\n        margin: 0 !important;\n        flex-shrink: 0;\n        &:first-child {\n          padding-left: 0 !important;\n        }\n        &::after {\n          display: none;\n        }\n      }\n      &.ant-menu-item-selected {\n        background-color: transparent;\n        &::after {\n          left: 0;\n          right: auto;\n          border-color: ${themeGet('primary.0', '#008489')};\n          border-width: 3px;\n        }\n        a {\n          color: ${themeGet('primary.0', '#008489')};\n          font-weight: 700;\n        }\n      }\n      a {\n        color: ${themeGet('text.0', '#2C2C2C')};\n        font-size: 15px;\n        transition: 0.3s ease;\n        @media (max-width: 575px) {\n          padding-bottom: 8px;\n          border-bottom: 2px solid transparent;\n          &.active {\n            border-bottom-color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n        &:hover {\n          color: ${themeGet('primary.0', '#008489')};\n          background-color: transparent !important;\n        }\n      }\n    }\n  }\n`;\n\nexport const SidebarMenuWrapper = styled.div`\n  overflow: hidden;\n  @media (max-width: 575px) {\n    height: 67px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AgentAvatar = styled.div`\n  background-color: ${themeGet('color.2', '#F7F7F7')};\n  padding: 45px 30px 30px;\n  @media (min-width: 1441px) {\n    padding: 60px 60px 30px;\n  }\n  @media (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    padding: 32px 30px;\n  }\n  .ant-avatar {\n    width: 90px;\n    height: 90px;\n    margin-bottom: 25px;\n    @media (max-width: 767px) {\n      width: 80px;\n      height: 80px;\n      margin-bottom: 0;\n      margin-right: 20px;\n      flex-shrink: 0;\n    }\n    @media (max-width: 320px) {\n      width: 65px;\n      height: 65px;\n    }\n  }\n  a {\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 13px;\n    line-height: 16px;\n    &:hover,\n    &:focus {\n      outline: 0;\n      box-shadow: none;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div``;\n\nexport const AgentName = styled.h3`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 17px;\n  line-height: 21px;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const FromWrapper = styled.div`\n  padding: 30px;\n  border-radius: 6px;\n  border: 1px solid ${themeGet('border.3', '#E6E6E6')};\n  background-color: ${themeGet('color.1', '#ffffff')};\n  overflow: hidden;\n  @media (min-width: 1441px) {\n    padding: 60px;\n  }\n  @media (max-width: 767px) {\n    padding: 0;\n    border-radius: 0;\n    border: 0;\n\n    h2 {\n      display: none;\n    }\n\n    form {\n      padding-bottom: 50px;\n    }\n  }\n\n  .submit-container {\n    display: flex;\n    flex-direction: row-reverse;\n    margin-top: 30px;\n    @media (max-width: 767px) {\n      width: 100%;\n      padding: 22px 30px;\n      flex-direction: row;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      z-index: 1;\n      background-color: ${themeGet('color.1', '#ffffff')};\n      border-top: 1px solid ${themeGet('border.3', '#E6E6E6')};\n    }\n    > button[type='submit'] {\n      border-radius: 3px;\n      height: 47px;\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      font-size: 15px;\n      font-weight: 700;\n      text-transform: capitalize;\n      padding-left: 28px;\n      padding-right: 28px;\n      line-height: 1;\n      &::after {\n        content: none;\n      }\n    }\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 25px;\n  line-height: 30px;\n  font-weight: 700;\n  margin-bottom: 27px;\n  @media (min-width: 1441px) {\n    margin-bottom: 40px;\n  }\n  @media (max-width: 1200px) {\n    font-size: 22px;\n  }\n`;\n\nexport const AgentPictureUploader = styled.div`\n  @media (max-width: 767px) {\n    padding-bottom: 50px;\n  }\n  h4 {\n    font-size: 15px;\n    font-weight: 700;\n    line-height: 18px;\n    margin-bottom: 20px;\n  }\n  .image_uploader {\n    display: block;\n    overflow: hidden;\n    margin-bottom: 30px;\n  }\n  .ant-upload.ant-upload-drag {\n    border-radius: 3px;\n    background-color: ${themeGet('color.2', '#F7F7F7')};\n    border: 1px solid ${themeGet('border.0', '#EBEBEB')};\n    &:not(.ant-upload-disabled):hover {\n      border-color: ${themeGet('border.0', '#EBEBEB')};\n    }\n    .ant-upload.ant-upload-btn {\n      padding: 56px 0;\n      @media (max-width: 767px) {\n        padding: 30px 0;\n      }\n      .ant-upload-drag-container {\n        > div {\n          flex-direction: column;\n          justify-content: center;\n          .ant-upload-text {\n            padding: 0;\n            margin: 5px 0 0;\n            text-decoration: underline;\n            background-color: transparent;\n            color: ${themeGet('primary.0', '#008489')};\n          }\n        }\n      }\n    }\n  }\n\n  .ant-upload-list {\n    &-item {\n      display: block !important;\n\n      &:hover {\n        .ant-upload-list-item-actions {\n          opacity: 1;\n        }\n      }\n    }\n    &-item-name {\n      display: none;\n    }\n    &-item-actions {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      z-index: 10;\n      white-space: nowrap;\n      -webkit-transform: translate(-50%, -50%);\n      transform: translate(-50%, -50%);\n      opacity: 0;\n      -webkit-transition: all 0.3s;\n      transition: all 0.3s;\n      &:hover {\n        opacity: 1;\n      }\n\n      .anticon-eye,\n      .anticon-delete {\n        z-index: 10;\n        width: 16px;\n        margin: 0 4px;\n        color: hsla(0, 0%, 100%, 0.85) !important;\n        font-size: 16px;\n        cursor: pointer;\n        -webkit-transition: all 0.3s;\n        transition: all 0.3s;\n      }\n    }\n    &.ant-upload-list-picture-card {\n      margin-top: 20px;\n      .ant-upload-list-item {\n        padding: 5px;\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n        float: left;\n        width: 104px;\n        height: 104px;\n        margin: 0 8px 8px 0;\n\n        &:hover {\n          .ant-upload-list-item-thumbnail {\n            &::before {\n              opacity: 1;\n            }\n          }\n        }\n\n        &-thumbnail {\n          position: relative;\n          &::before {\n            position: absolute;\n            z-index: 1;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(0, 0, 0, 0.5);\n            opacity: 0;\n            -webkit-transition: all 0.3s;\n            transition: all 0.3s;\n            content: ' ';\n            top: 0;\n            left: 0;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AccountSettingWrapper;\n","import React, { Fragment } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Row, Col, Input, Select, Button, DatePicker } from 'antd';\nimport FormControl from 'components/UI/FormControl/FormControl';\n// import DatePicker from 'components/UI/AntdDatePicker/AntdDatePicker';\nimport { FormTitle } from './AccountSettings.style';\n\nconst genderOptions = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' },\n  { label: 'Other', value: 'Other' },\n];\nconst languageOptions = [\n  { label: 'English', value: 'english' },\n  { label: 'Spanish', value: 'spanish' },\n  { label: 'French', value: 'french' },\n  { label: 'Russian', value: 'russian' },\n];\n\nconst AgentCreateOrUpdateForm = () => {\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n  return (\n    <Fragment>\n      <FormTitle>Basic Information</FormTitle>\n      <form className=\"form-container\" onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={30}>\n          <Col lg={12} xs={24}>\n            <FormControl\n              label=\"First name\"\n              htmlFor=\"firstName\"\n              error={errors.firstName && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"firstName\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12} xs={24}>\n            <FormControl\n              label=\"Last name\"\n              htmlFor=\"lastName\"\n              error={errors.lastName && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"lastName\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <Row gutter={30}>\n          <Col lg={12} xs={24}>\n            <FormControl\n              label=\"Date of birth\"\n              htmlFor=\"dateOfBirthday\"\n              error={\n                errors.dateOfBirthday && <span>This field is required!</span>\n              }\n            >\n              <Controller\n                name=\"dateOfBirthday\"\n                defaultValue=\"\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <DatePicker\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12} xs={24}>\n            <Row gutter={30}>\n              <Col sm={12} xs={24}>\n                <FormControl\n                  label=\"I am\"\n                  htmlFor=\"agentGender\"\n                  error={\n                    errors.agentGender && <span>This field is required!</span>\n                  }\n                >\n                  <Controller\n                    name=\"agentGender\"\n                    defaultValue=\"\"\n                    control={control}\n                    rules={{ required: true }}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <Select\n                        options={genderOptions}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        defaultValue={value || 'male'}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n              <Col sm={12} xs={24}>\n                <FormControl\n                  label=\"Preferred Language\"\n                  htmlFor=\"preferredLanguage\"\n                  error={\n                    errors.preferredLanguage && (\n                      <span>This field is required!</span>\n                    )\n                  }\n                >\n                  <Controller\n                    name=\"preferredLanguage\"\n                    defaultValue=\"\"\n                    control={control}\n                    rules={{ required: true }}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                      <Select\n                        options={languageOptions}\n                        onChange={onChange}\n                        onBlur={onBlur}\n                        defaultValue={value || 'english'}\n                      />\n                    )}\n                  />\n                </FormControl>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row gutter={30}>\n          <Col lg={12} xs={24}>\n            <FormControl\n              label=\"Email address\"\n              htmlFor=\"email\"\n              error={\n                errors.email && (\n                  <>\n                    {errors.email?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.email?.type === 'pattern' && (\n                      <span>Please enter a valid email address!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"email\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                  pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input\n                    type=\"email\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={12} xs={24}>\n            <FormControl\n              label=\"Phone number\"\n              htmlFor=\"phoneNumber\"\n              error={\n                errors.phoneNumber && (\n                  <>\n                    {errors.phoneNumber?.type === 'required' && (\n                      <span>This field is required!</span>\n                    )}\n                    {errors.phoneNumber?.type === 'pattern' && (\n                      <span>Please enter your valid number!</span>\n                    )}\n                  </>\n                )\n              }\n            >\n              <Controller\n                name=\"phoneNumber\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                  pattern: /^[0-9]*$/,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={24} xs={24}>\n            <FormControl\n              label=\"Where you live\"\n              htmlFor=\"address\"\n              error={errors.address && <span>This field is required!</span>}\n            >\n              <Controller\n                name=\"address\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input onChange={onChange} onBlur={onBlur} value={value} />\n                )}\n              />\n            </FormControl>\n          </Col>\n          <Col lg={24} xs={24}>\n            <FormControl\n              label=\"Describe Yourself (Optional)\"\n              htmlFor=\"describeYourself\"\n            >\n              <Controller\n                name=\"describeYourself\"\n                defaultValue=\"\"\n                control={control}\n                rules={{\n                  required: true,\n                }}\n                render={({ field: { onChange, onBlur, value } }) => (\n                  <Input.TextArea\n                    rows={5}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    value={value}\n                  />\n                )}\n              />\n            </FormControl>\n          </Col>\n        </Row>\n        <div className=\"submit-container\">\n          <Button htmlType=\"submit\" type=\"primary\">\n            Save Changes\n          </Button>\n        </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default AgentCreateOrUpdateForm;\n"],"names":["styled","themeGet","className","label","labelTag","htmlFor","children","error","addAllClasses","push","join","HtmlLabel","as","content","LabelWrapper","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","props","AccountSettingWrapper","AccountSidebar","SidebarMenuWrapper","AgentAvatar","ContentWrapper","AgentName","FromWrapper","FormTitle","AgentPictureUploader","genderOptions","value","languageOptions","useForm","control","errors","formState","handleSubmit","Fragment","onSubmit","data","console","log","gutter","lg","xs","firstName","name","defaultValue","rules","required","render","field","onChange","onBlur","lastName","dateOfBirthday","sm","agentGender","options","preferredLanguage","email","type","pattern","phoneNumber","address","rows","htmlType"],"sourceRoot":""}