{"version":3,"file":"static/js/836.6fc12875.chunk.js","mappings":"kOAYMA,GAAiBC,EAAAA,EAAAA,IAAO,IAAPA,CACrBC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IACAC,EAAAA,EAAAA,GAAO,YAGHC,EAAU,SAAH,OAAMC,EAAO,EAAPA,QAAYC,GAAK,mBAClC,SAACX,GAAc,kBAAKW,GAAK,aAAGD,IAAyB,EA4CvDD,EAAQG,aAAe,CACrBC,GAAI,KACJC,GAAI,EACJC,GAAI,EACJX,WAAY,KAGd,K,6GCrEMY,GAAef,EAAAA,EAAAA,IAAO,MAAPA,CACnB,CACEgB,QAAS,QACTC,SAAU,OACVC,OAAQ,QAEVjB,EAAAA,GACAM,EAAAA,EAAAA,GAAO,UAGHY,EAAQ,SAAH,OAAMC,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IAAQX,GAAK,mBACjC,SAACK,GAAY,QAACK,IAAKA,EAAKC,IAAKA,GAASX,GAAS,EAGjD,MAOAS,EAAMR,aAAe,CACnBW,EAAG,E,wJCxBCC,EAAkBvB,EAAAA,GAAAA,IAAU,qUAmBrBwB,EAAiBxB,EAAAA,GAAAA,IAAU,ikBAO3ByB,EAAAA,EAAAA,GAAS,YAAa,YAatBA,EAAAA,EAAAA,GAAS,UAAW,YACbA,EAAAA,EAAAA,GAAS,YAAa,YAClBA,EAAAA,EAAAA,GAAS,YAAa,YAI/BA,EAAAA,EAAAA,GAAS,UAAW,YACbA,EAAAA,EAAAA,GAAS,YAAa,YAClBA,EAAAA,EAAAA,GAAS,YAAa,YAKhD,I,WCpCA,EAbqB,SAAH,GAAgC,IAAD,IAAzBC,cAEtB,YAFmC,MAAG,CAAC,EAAC,GAC1BC,OAAS,KAErB,SAAC,EAAe,WACd,UAACH,EAAc,YACb,SAACL,EAAA,EAAK,CAACC,IAAI,qBAAqBC,IAAI,SACpC,SAACb,EAAA,EAAO,CAACI,GAAG,KAAKH,QAAQ,0BACzB,SAACmB,EAAA,EAAQ,CAACC,KAAK,IAAIpB,QAAQ,gBAInC,C","sources":["components/UI/Heading/Heading.js","components/UI/Image/Image.js","containers/404/404.style.js","containers/404/404.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst HeadingWrapper = styled('p')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst Heading = ({ content, ...props }) => (\n  <HeadingWrapper {...props}>{content}</HeadingWrapper>\n);\n\nHeading.propTypes = {\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  as: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nHeading.defaultProps = {\n  as: 'h2',\n  mt: 0,\n  mb: 0,\n  fontWeight: 700,\n};\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { base, themed } from '../Base';\n\nconst ImageWrapper = styled('img')(\n  {\n    display: 'block',\n    maxWidth: '100%',\n    height: 'auto',\n  },\n  base,\n  themed('Image')\n);\n\nconst Image = ({ src, alt, ...props }) => (\n  <ImageWrapper src={src} alt={alt} {...props} />\n);\n\nexport default Image;\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nImage.defaultProps = {\n  m: 0,\n};\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst NotFoundWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 890px;\n  padding: 0 25px;\n  margin: 60px auto;\n\n  img {\n    max-width: 560px;\n    @media (min-width: 1901px) {\n      max-width: 100%;\n    }\n    @media (max-width: 667px) {\n      max-width: 100%;\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  text-align: center;\n\n  h2 {\n    font-size: 18px;\n    font-weight: 700;\n    margin: 56px auto 30px;\n    color: ${themeGet('primary.0', '#008489')};\n  }\n\n  a {\n    height: 37px;\n    padding: 0 14px;\n    font-size: 15px;\n    box-shadow: none;\n    font-weight: 700;\n    text-shadow: none;\n    display: inline-flex;\n    align-items: center;\n    border-radius: 3px;\n    color: ${themeGet('color.1', '#ffffff')};\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    &:focus,\n    &:hover {\n      outline: 0;\n      color: ${themeGet('color.1', '#ffffff')};\n      border-color: ${themeGet('primary.1', '#399C9F')};\n      background-color: ${themeGet('primary.1', '#399C9F')};\n    }\n  }\n`;\n\nexport default NotFoundWrapper;\n","import React from 'react';\nimport Image from 'components/UI/Image/Image';\nimport Heading from 'components/UI/Heading/Heading';\nimport TextLink from 'components/UI/TextLink/TextLink';\nimport NotFoundWrapper, { ContentWrapper } from './404.style';\n\nconst NotFoundPage = ({ staticContext = {} }) => {\n  staticContext.status = 404;\n  return (\n    <NotFoundWrapper>\n      <ContentWrapper>\n        <Image src=\"/images/404@2x.png\" alt=\"404\" />\n        <Heading as=\"h2\" content=\"Something Went Wrong\" />\n        <TextLink link=\"/\" content=\"Go Back\" />\n      </ContentWrapper>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFoundPage;\n"],"names":["HeadingWrapper","styled","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","Heading","content","props","defaultProps","as","mt","mb","ImageWrapper","display","maxWidth","height","Image","src","alt","m","NotFoundWrapper","ContentWrapper","themeGet","staticContext","status","TextLink","link"],"sourceRoot":""}