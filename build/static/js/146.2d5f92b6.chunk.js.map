{"version":3,"file":"static/js/146.2d5f92b6.chunk.js","mappings":"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","sources":["components/UI/FormControl/FormControl.style.js","components/UI/FormControl/FormControl.js","components/UI/HtmlLabel/HtmlLabel.js","containers/Auth/Auth.style.js","containers/Auth/ForgetPassword.js"],"sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n\n  .ant-btn-primary {\n    &:hover {\n      background: ${themeGet('primary.0', '#008489')};\n      opacity: 0.9;\n    }\n  }\n\n  .field-label {\n    display: block;\n    color: ${themeGet('text.0', '#2C2C2C')};\n    font-size: 15px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n  .ant-input,\n  .ant-picker,\n  .ant-input-number,\n  .ant-input-password {\n    width: 100%;\n    min-height: 48px;\n    border-radius: 3px;\n    border-color: ${themeGet('border.3', '#E6E6E6')};\n    &:focus,\n    &.ant-input-focused,\n    &.ant-picker-focused,\n    &.ant-input-number-focused,\n    &.ant-input-password-focused {\n      box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n    }\n  }\n\n  .ant-checkbox-wrapper {\n    .ant-checkbox {\n      + span {\n        font-size: 15px;\n        font-weight: 700;\n        color: ${themeGet('text.0', '#2C2C2C')};\n        line-height: 1;\n      }\n      .ant-checkbox-inner {\n        border-radius: 0;\n        border-color: ${themeGet('text.1', '#909090')};\n      }\n      &.ant-checkbox-checked {\n        .ant-checkbox-inner {\n          border-color: ${themeGet('primary.0', '#008489')};\n          background-color: ${themeGet('primary.0', '#008489')};\n        }\n      }\n    }\n  }\n\n  .ant-input-number {\n    max-width: 100px;\n    .ant-input-number-input {\n      min-height: 48px;\n    }\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n  .ant-input-number-handler:hover {\n    .ant-input-number-handler-up-inner,\n    .ant-input-number-handler-down-inner {\n      color: ${themeGet('primary.0', '#008489')};\n    }\n  }\n\n  .ant-picker {\n    &:hover {\n      border-color: ${themeGet('border.3', '#E6E6E6')};\n    }\n  }\n\n  .ant-select {\n    &.ant-select-single:not(.ant-select-customize-input) {\n      width: 100%;\n      .ant-select-selector {\n        border-radius: 3px;\n        border-color: ${themeGet('border.3', '#E6E6E6')};\n        min-height: 48px;\n        .ant-select-selection-search-input {\n          min-height: 48px;\n        }\n        .ant-select-selection-item {\n          display: flex;\n          align-items: center;\n        }\n      }\n    }\n    &.ant-select-focused {\n      &.ant-select-single:not(.ant-select-customize-input) {\n        .ant-select-selector {\n          box-shadow: 0 0 0 1px rgba(0, 132, 137, 0.2);\n        }\n      }\n    }\n  }\n\n  &.has-error {\n    .ant-input,\n    .ant-input-password {\n      border-color: ${themeGet('error.0', '#F9503D')};\n    }\n    .feedback {\n      color: ${themeGet('error.0', '#F9503D')};\n    }\n    .ant-input-password {\n      .ant-input {\n        border-color: transparent;\n      }\n    }\n  }\n\n  .ant-input-password {\n    .ant-input {\n      min-height: auto;\n      border-radius: initial;\n      border-color: transparent;\n      &:focus {\n        box-shadow: none;\n      }\n    }\n  }\n\n  .ant-radio-group-solid {\n    .ant-radio-button-wrapper-checked:not(.ant-radio-button-wrapper-disabled) {\n      border-color: ${themeGet('primary.0', '#008489')};\n      background-color: ${themeGet('primary.0', '#008489')};\n      &::before {\n        content: none;\n      }\n      &:hover {\n        color: #fff;\n        &::before {\n          content: none;\n        }\n      }\n    }\n    .ant-radio-button-wrapper {\n      &:hover {\n        color: ${themeGet('primary.0', '#008489')};\n      }\n    }\n  }\n\n  button[type='submit'] {\n    border-radius: 3px;\n    height: 47px;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    font-size: 15px;\n    font-weight: 700;\n    text-transform: capitalize;\n    padding-left: 28px;\n    padding-right: 28px;\n    line-height: 1;\n\n    &::after {\n      content: none;\n    }\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HtmlLabel from '../HtmlLabel/HtmlLabel';\nimport Wrapper from './FormControl.style';\n\nconst FormControl = ({\n  className,\n  label,\n  labelTag,\n  htmlFor,\n  children,\n  error,\n}) => {\n  const addAllClasses = ['form-control'];\n  if (error) {\n    addAllClasses.push('has-error');\n  }\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <Wrapper className={addAllClasses.join(' ')}>\n      {label && (\n        <HtmlLabel\n          className=\"field-label\"\n          as={labelTag}\n          htmlFor={htmlFor}\n          content={label}\n        />\n      )}\n      {children}\n      {error && <div className=\"feedback\">{error}</div>}\n    </Wrapper>\n  );\n};\n\nFormControl.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  labelTag: PropTypes.string,\n  htmlFor: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.any,\n};\n\nexport default FormControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n} from 'styled-system';\nimport { base, themed } from '../Base';\n\nconst LabelWrapper = styled('label')(\n  base,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  themed('Heading')\n);\n\nconst HtmlLabel = ({ htmlFor, content, ...props }) => {\n  return (\n    <LabelWrapper htmlFor={htmlFor} {...props}>\n      {content}\n    </LabelWrapper>\n  );\n};\n\nHtmlLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  fontFamily: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  fontWeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  textAlign: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  lineHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  letterSpacing: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  ...base.propTypes,\n};\n\nexport default HtmlLabel;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const FormWrapper = styled.div`\n  width: 43%;\n  padding: 81px;\n  @media (min-width: 1441px) {\n    padding: 130px;\n  }\n  @media (max-width: 1200px) {\n    width: 50%;\n  }\n  @media (max-width: 991px) {\n    padding: 56px;\n    width: 80%;\n    margin: 0 auto;\n  }\n  @media (max-width: 767px) {\n    width: 100%;\n  }\n  @media (max-width: 480px) {\n    padding: 30px;\n  }\n\n  .signin-btn {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 3px;\n    height: 57px;\n    font-size: 17px;\n    font-weight: 700;\n    border-color: ${themeGet('primary.0', '#008489')};\n    background-color: ${themeGet('primary.0', '#008489')};\n    @media (max-width: 1536px) {\n      height: 54px;\n      font-size: 16px;\n      font-weight: 600;\n    }\n    svg {\n      width: 18px;\n      height: 18px;\n      margin-right: 2px;\n    }\n    &::after {\n      content: none;\n    }\n    &:hover,\n    &:focus {\n      border-color: #008489d1;\n      background-color: #008489d1;\n    }\n  }\n\n  .ant-divider {\n    margin: 41px 0 !important;\n    .ant-divider-inner-text {\n      font-size: 15px;\n      font-weight: 700;\n      color: ${themeGet('text.2', '#777777')};\n    }\n  }\n\n  .ant-btn {\n    &.facebook-btn,\n    &.github-btn,\n    &.firebase-btn,\n    &.google-btn {\n      height: 57px;\n      border-radius: 3px;\n      font-size: 15px;\n      font-weight: 700;\n      @media (max-width: 1536px) {\n        height: 54px;\n        font-weight: 600;\n      }\n      &::after {\n        content: none;\n      }\n    }\n    &.facebook-btn {\n      border-color: ${themeGet('color.7', '#3b5998')};\n      background-color: ${themeGet('color.7', '#3b5998')};\n    }\n    &.github-btn {\n      border-color: ${themeGet('color.14', '#00ACEE')};\n      background-color: ${themeGet('color.14', '#00ACEE')};\n    }\n    &.firebase-btn {\n      border-color: ${themeGet('color', '#FFCB2B')};\n      background-color: ${themeGet('color', '#FFCB2B')};\n    }\n    &.google-btn {\n      border-color: ${themeGet('color.10', '#dd4b39')};\n      background-color: ${themeGet('color.10', '#dd4b39')};\n    }\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 40px;\n  margin-bottom: 40px;\n\n  @media (max-width: 575px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 20px;\n  }\n\n  > a {\n    color: ${themeGet('primary.0', '#008489')};\n    font-size: 15px;\n    font-weight: 700;\n    line-height: 1;\n    &:hover,\n    &:focus {\n      outline: none;\n      color: #008489d1;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const SwitchWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  .field-container {\n    .ant-form-item {\n      margin-bottom: 0;\n      margin-right: 10px;\n    }\n  }\n\n  .ant-switch {\n    min-width: 36px;\n    height: 21px;\n    &.ant-switch-checked {\n      background-color: ${themeGet('primary.0', '#008489')};\n      &:hover {\n        background-color: ${themeGet('primary.0', '#008489')};\n      }\n    }\n    &::after {\n      width: 17px;\n      height: 17px;\n    }\n    &:hover {\n      background-color: ${themeGet('color.5', 'rgba(0, 0, 0, 0.25)')};\n    }\n    &:focus {\n      box-shadow: none;\n    }\n    .ant-click-animating-node {\n      display: none;\n    }\n  }\n`;\n\nexport const Label = styled.span`\n  font-size: 15px;\n  line-height: 1;\n  font-weight: 700;\n  color: ${themeGet('text.0', '#2C2C2C')};\n  padding: 0 8px;\n`;\n\nexport const Title = styled.h2`\n  color: ${themeGet('text.0', '#2C2C2C')};\n  font-size: 45px;\n  line-height: 54px;\n  font-weight: 700;\n  margin-bottom: 0;\n  margin-top: 58px;\n  @media (max-width: 1600px) {\n    font-size: 38px;\n    line-height: 48px;\n  }\n  @media (max-width: 1440px) {\n    font-size: 32px;\n    line-height: 42px;\n  }\n  @media (max-width: 1200px) {\n    font-size: 28px;\n    line-height: 32px;\n  }\n`;\n\nexport const TitleInfo = styled.p`\n  color: ${themeGet('text.2', '#777777')};\n  font-size: 25px;\n  line-height: 30px;\n  margin-bottom: 45px;\n  margin-top: 10px;\n  @media (max-width: 1600px) {\n    font-size: 22px;\n  }\n  @media (max-width: 1440px) {\n    font-size: 20px;\n  }\n  @media (max-width: 1440px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 15px;\n  font-weight: 700;\n  color: ${themeGet('text.2', '#777777')};\n  line-height: 1;\n  a {\n    color: ${themeGet('primary.0', '#008489')};\n    &:hover,\n    &:focus {\n      outline: none;\n      color: #008489d1;\n      text-decoration: none;\n    }\n  }\n`;\n\nexport const BannerWrapper = styled.div`\n  width: 57%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  right: 0;\n  @media (max-width: 1200px) {\n    width: 50%;\n  }\n  @media (max-width: 991px) {\n    display: none;\n  }\n  img {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport default Wrapper;\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdEmail } from 'react-icons/md';\nimport { Input, Button } from 'antd';\nimport Logo from 'components/UI/Logo/Logo';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport Wrapper, {\n  Title,\n  TitleInfo,\n  FormWrapper,\n  BannerWrapper,\n} from './Auth.style';\n\nexport default function ForgetPassWord() {\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm({\n    mode: 'onChange',\n  });\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <Wrapper>\n      <FormWrapper>\n        <Logo\n          withLink\n          linkTo=\"/\"\n          src=\"/images/logo-alt.svg\"\n          title=\"TripFinder.\"\n        />\n        <Title>Welcome Back</Title>\n        <TitleInfo>Enter your email to recover your account</TitleInfo>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl\n            label=\"Email\"\n            htmlFor=\"email\"\n            error={\n              errors.email && (\n                <>\n                  {errors.email?.type === 'required' && (\n                    <span>This field is required!</span>\n                  )}\n                  {errors.email?.type === 'pattern' && (\n                    <span>Please enter a valid email address!</span>\n                  )}\n                </>\n              )\n            }\n          >\n            <Controller\n              name=\"email\"\n              defaultValue=\"\"\n              control={control}\n              rules={{\n                required: true,\n                pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n              }}\n              render={({ field: { onChange, onBlur, value } }) => (\n                <Input\n                  type=\"email\"\n                  onChange={onChange}\n                  onBlur={onBlur}\n                  value={value}\n                />\n              )}\n            />\n          </FormControl>\n          <Button\n            className=\"signin-btn\"\n            type=\"primary\"\n            htmlType=\"submit\"\n            size=\"large\"\n            style={{ width: '100%' }}\n          >\n            <MdEmail />\n            Send email\n          </Button>\n        </form>\n      </FormWrapper>\n      <BannerWrapper>\n        <img src=\"/images/login-page-bg.jpg\" alt=\"Auth page banner\" />\n      </BannerWrapper>\n    </Wrapper>\n  );\n}\n"],"names":["styled","themeGet","className","label","labelTag","htmlFor","children","error","addAllClasses","push","join","HtmlLabel","as","content","LabelWrapper","base","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","themed","props","Wrapper","FormWrapper","FieldWrapper","SwitchWrapper","Label","Title","TitleInfo","Text","BannerWrapper","ForgetPassWord","useForm","mode","control","errors","formState","handleSubmit","withLink","linkTo","src","title","onSubmit","data","console","log","email","type","name","defaultValue","rules","required","pattern","render","field","onChange","onBlur","value","htmlType","size","style","width","alt"],"sourceRoot":""}